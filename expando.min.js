var expando=function(){var regex={id:/[\#]([a-z\-\_0-9]*)/i,cls:/[\.]([a-z\-\_0-9]*)/gi,tag:/^[a-z]*/gi,cnt:/[\*]([0-9]*)/},module={node:function(){this.tag="div",this.classList=[],this.id="",this.modifiers="",this.expansion="",this.children=[],this.count=1},expand:function(expression,strict){for(var tree=module.treeify(expression.split("")),result="",i=0;i<tree.length;i++)tree[i].expand(strict),result+=module.EM(tree[i]);return result},treeify:function(bytes){for(var read="",nodelist=[],index=0;read=bytes.shift();)switch("undefined"==typeof nodelist[index]&&(nodelist[index]=new module.node),read){case"{":nodelist[index].children=module.treeify(bytes);break;case"}":return nodelist;case"+":index++;break;case"[":for(var ignoreNext=!1,reading=!0;bytes.length>0&&reading;)read=bytes.shift(),ignoreNext?(nodelist[index].modifiers+=read,ignoreNext=!1):(nodelist[index].modifiers+="]"!=read&&"\\"!=read?read:"",ignoreNext="\\"==read,reading=!("]"==read)),console.log({modtext:nodelist[index].modifiers,ignorenext:ignoreNext,reading:reading,read:read});break;default:nodelist[index].expansion+=read}return nodelist},EM:function(node,strict){var noEndTag=!1;switch(node.tag.toLowerCase()){case"link":case"meta":case"img":case"area":case"source":case"br":case"basefront":case"col":case"hr":case"input":case"keygen":case"embed":case"keygen":case"param":case"source":case"track":case"wbr":noEndTag=!0}var start="<"+node.tag;if(start+=node.id?' id="'+node.id+'"':"",start+=node.modifiers?" "+node.modifiers:"",node.classList.length){start+=' class="';for(var i=0;i<node.classList.length;i++)start+=(i>0?" ":"")+node.classList[i].match(/[\.]([a-z\_\-]*)/i)[1];start+='"'}if(start+=(noEndTag&&strict&&!node.children.length?" /":"")+">",node.children.length)for(var i=0;i<node.children.length;i++)start+=module.EM(node.children[i]);start+=!noEndTag||node.children.length?"</"+node.tag+">":"";for(var i=2;i<=node.count;i++)start+=start;return start}};return module.node.prototype.expand=function(){var x=this.expansion;if(this.id=(x.match(regex.id)?x.match(regex.id)[1]:this.id)||this.id,this.tag=(x.match(regex.tag)?x.match(regex.tag)[0]:this.tag)||this.tag,this.classList=x.match(regex.cls)||[],this.count=x.match(regex.cnt)?parseInt(x.match(regex.tag)[0]):1,this.children)for(var i=0;i<this.children.length;i++)this.children[i].expand()},module}();